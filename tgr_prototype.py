import telebot
from telebot import types

import datetime

import psycopg2

#–±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å postgresql


# —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
conn = psycopg2.connect(dbname='BotDBtest', user='postgres', password='danilworld1', host='127.0.0.1', port='5432')

# —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∫—É—Ä—Å–æ—Ä–∞
cur = conn.cursor()



bot = telebot.TeleBot ("5818591053:AAFZc3LJiRLkzNHIEh4TnBshzHWwIdpSABU")


week = ["–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–≤—Ç–æ—Ä–Ω–∏–∫", "—Å—Ä–µ–¥–∞", "—á–µ—Ç–≤–µ—Ä–≥", "–ø—è—Ç–Ω–∏—Ü–∞", "—Å—É–±–±–æ—Ç–∞", "–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"]


group_name = "–ò–°–ü–∫-302-52-00"   #–ø–æ—Ç–æ–º –±—É–¥–µ—Ç –±—Ä–∞—Ç—å—Å—è –∏–∑ –ë–î
teacher_name = "–ì–Ω–∏–µ–Ω–∫–æ –ê.–ê."   #–ø–æ—Ç–æ–º –±—É–¥–µ—Ç –±—Ä–∞—Ç—å—Å—è –∏–∑ –ë–î
day = datetime.datetime.today().weekday()


day_of_week = week[day]          #—Å–µ–≥–æ–¥–Ω—è
day_tomorrow = week[day+1]       #–∑–∞–≤—Ç—Ä–∞
#day_tomorrow = "–ø—è—Ç–Ω–∏—Ü–∞"        #–¥–ª—è —Ç–µ—Å—Ç–æ–≤




@bot.message_handler(commands = ["start"])
def start (message):

    markup = types.ReplyKeyboardMarkup (resize_keyboard= True) #—Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–æ–∫ –ø–æ–¥–≥–æ–Ω—è—é—Ç—Å—è –∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
    #—Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
    item1 = types.KeyboardButton('üìö –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
    item2 = types.KeyboardButton('‚Ñπ –†–µ—Å—É—Ä—Å—ã –í—è—Ç–ì–£')
    item3 = types.KeyboardButton('‚úâ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏')
    item4 = types.KeyboardButton('üìÉ –°–ø—Ä–∞–≤–∫–∞')
    item5 = types.KeyboardButton('‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏')
    markup.add(item1, item2, item3, item4, item5)
    
    bot.send_message (message.chat.id, '–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –ú—ã —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –≤ —á–∏—Å–ª–µ –Ω–∞—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'.format(message.from_user), reply_markup=markup) #–°–û–û–ë–©–ï–ù–ò–ï –ü–†–ò –ù–ê–ñ–ê–¢–ò–ò –°–¢–ê–†–¢

@bot.message_handler(content_types=['text'])
def bot_message(message):
    if message.chat.type == 'private':
        if message.text == 'üìö –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
            markup = types.ReplyKeyboardMarkup (resize_keyboard= True)
            item1 = types.KeyboardButton('üßë‚Äçüéì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã')
            item2 = types.KeyboardButton('üë®‚Äçüè´ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è')
            item3 = types.KeyboardButton('üîî –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤')
            back = types.KeyboardButton('üîö–ù–∞–∑–∞–¥')
            markup.add(item1, item2, item3, back)

            bot.send_message (message.chat.id,'üìö –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ',reply_markup=markup)
        elif message.text == '‚Ñπ –†–µ—Å—É—Ä—Å—ã –í—è—Ç–ì–£':
            bot.send_message(message.chat.id, '–ó–¥–µ—Å—å —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ä–µ—Å—É—Ä—Å—ã')

        elif message.text == '‚úâ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏':
            bot.send_message(message.chat.id, '–í—ã–≤–æ–¥ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏')

        elif message.text == 'üìÉ –°–ø—Ä–∞–≤–∫–∞':
            bot.send_message(message.chat.id, '–í—ã–≤–æ–¥ —Å–ø—Ä–∞–≤–∫–∏')

        elif message.text == '‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏':
            markup = types.ReplyKeyboardMarkup (resize_keyboard= True)
            item1 = types.KeyboardButton('‚úè –ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø–ø—É')
            item2 = types.KeyboardButton('üì≥ –í–∫–ª.—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')
            item3 = types.KeyboardButton('üì¥ –í—ã–∫–ª.—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')
            back = types.KeyboardButton('üîö–ù–∞–∑–∞–¥')
            markup.add(item1, item2, item3, back)

            bot.send_message (message.chat.id,'‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏',reply_markup=markup)

        elif message.text == 'üîö–ù–∞–∑–∞–¥':
            markup = types.ReplyKeyboardMarkup (resize_keyboard= True)
            item1 = types.KeyboardButton('üìö –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
            item2 = types.KeyboardButton('‚Ñπ –†–µ—Å—É—Ä—Å—ã –í—è—Ç–ì–£')
            item3 = types.KeyboardButton('‚úâ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏')
            item4 = types.KeyboardButton('üìÉ –°–ø—Ä–∞–≤–∫–∞')
            item5 = types.KeyboardButton('‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏')
            markup.add(item1, item2, item3, item4, item5)

            bot.send_message (message.chat.id,'üîö–ù–∞–∑–∞–¥',reply_markup=markup)
        
        elif message.text == 'üîî –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤':
            bot.send_message(message.chat.id, '–í—ã–≤–æ–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∑–≤–æ–Ω–∫–æ–≤')


        elif message.text == 'üßë‚Äçüéì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã':
            markup = types.ReplyKeyboardMarkup (resize_keyboard= True)
            item1 = types.KeyboardButton('–°–µ–≥–æ–¥–Ω—è')
            item2 = types.KeyboardButton('–ó–∞–≤—Ç—Ä–∞')
            item3 = types.KeyboardButton('–¢–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è')
            item4 = types.KeyboardButton('–°–ª–µ–¥—É—é—â–∞—è –Ω–µ–¥–µ–ª—è')
            back = types.KeyboardButton('üîö–ù–∞–∑–∞–¥')
            markup.add(item1, item2, item3, item4 , back)

            bot.send_message (message.chat.id,'üßë‚Äçüéì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã',reply_markup=markup)


        elif message.text == 'üë®‚Äçüè´ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è':
            markup = types.ReplyKeyboardMarkup (resize_keyboard= True)
            item1 = types.KeyboardButton('C–µ–≥–æ–¥–Ω—è')
            item2 = types.KeyboardButton('–ó–∞–≤—Ç—Äa')
            item3 = types.KeyboardButton('T–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è')
            item4 = types.KeyboardButton('–°–ª–µ–¥—É—é—â–∞—è –Ω–µ–¥–µ–ª—è')
            back = types.KeyboardButton('üîö–ù–∞–∑–∞–¥')
            markup.add(item1, item2, item3, item4 , back)

            bot.send_message (message.chat.id,'üîö–ù–∞–∑–∞–¥',reply_markup=markup)

        elif message.text == '–°–µ–≥–æ–¥–Ω—è':
            cur.execute(
                "SELECT day, subject, teacher, classroom, lecture_type, lecture_time FROM lecture WHERE group_id ILIKE %s AND day = %s",
                (f"{group_name}%", day_of_week))

            # –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –µ–≥–æ –≤ —Å–ø–∏—Å–æ–∫
            result_list = cur.fetchall()

            # –≤—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞
            for row in result_list:
                print(row)

            result_list2 = []
            result_list2 = [row for row in result_list if row[1] is not None or row[2] is not None]

            for row in result_list2:
                print(row)

            text = ""
            for row in result_list2:
                text += f"{row[5]} \n {row[1]} \n {row[4]} \n {row[2]} \n {row[3]}\n"

            print(text)
            text = str(text).replace("None", " ").replace("\n", " ").replace("  ", "")

            print(text)

            bot.send_message(message.chat.id, text)
            text = ""

        elif message.text == '–ó–∞–≤—Ç—Ä–∞':

            cur.execute(
                "SELECT day, subject, teacher, classroom, lecture_type, lecture_time FROM lecture WHERE group_id ILIKE %s AND day = %s",
                (f"{group_name}%", day_tomorrow))

            # –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –µ–≥–æ –≤ —Å–ø–∏—Å–æ–∫
            result_list = cur.fetchall()

            # –≤—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞
            for row in result_list:
                print(row)

            result_list2 = []
            result_list2 = [row for row in result_list if row[1] is not None or row[2] is not None]

            for row in result_list2:
                print(row)



            text = ""
            for row in result_list2:
                text += f"{row[5]} \n {row[1]} \n {row[4]} \n {row[2]} \n {row[3]}\n"

            print(text)
            text = str(text).replace("None", " ").replace("\n", " ").replace("  ", "")

            print(text)

            bot.send_message(message.chat.id, text)
            text = ""

        elif message.text == '–¢–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è':

            cur.execute(
                "SELECT day, subject, teacher, classroom, lecture_type, lecture_time FROM lecture WHERE group_id = %s",
                (f"{group_name}",))

            result_list = cur.fetchall()

            result_list2 = []
            for row in result_list:
                if all(row[1:]):
                    result_list2.append(row)

            text = ""
            for row in result_list2:
                text +=f"{row[0]} \n {row[5]} \n {row[1]} \n {row[4]} \n {row[2]} \n {row[3]}\n"
            print(text)

            bot.send_message(message.chat.id, text)

        elif message.text == '–°–ª–µ–¥—É—é—â–∞—è –Ω–µ–¥–µ–ª—è':
            bot.send_message(message.chat.id, '–í—ã–≤–æ–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é')

        elif message.text == 'üì≥ –í–∫–ª.—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è':
            bot.send_message(message.chat.id, '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª.')
        
        elif message.text == 'üì¥ –í—ã–∫–ª.—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è':
            bot.send_message(message.chat.id, '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª.')

# –≤—ã–≤–æ–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π

        elif message.text == 'C–µ–≥–æ–¥–Ω—è':
            cur.execute(
                "SELECT day, subject, group_id, classroom, lecture_type, lecture_time FROM lecture WHERE teacher ILIKE %s AND day = %s",
                (f"{teacher_name}%", day_of_week))

            # –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –µ–≥–æ –≤ —Å–ø–∏—Å–æ–∫
            result_list = cur.fetchall()

            # –≤—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞
            for row in result_list:
                print(row)

            result_list2 = []
            result_list2 = [row for row in result_list if row[1] is not None or row[2] is not None]

            for row in result_list2:
                print(row)

            text = ""
            for row in result_list2:
                text += f"{row[5]} \n {row[1]} \n {row[4]} \n {row[2]} \n {row[3]}\n"

            print(text)
            text = str(text).replace("None", " ").replace("\n", " ").replace("  ", "")

            print(text)

            bot.send_message(message.chat.id, text)
            text = ""


        elif message.text == '–ó–∞–≤—Ç—Äa':
            cur.execute(
                "SELECT day, subject, group_id, classroom, lecture_type, lecture_time FROM lecture WHERE teacher ILIKE %s AND day = %s",
                (f"{teacher_name}%", day_tomorrow))

            # –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –µ–≥–æ –≤ —Å–ø–∏—Å–æ–∫
            result_list = cur.fetchall()

            # –≤—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞
            for row in result_list:
                print(row)

            result_list2 = []
            result_list2 = [row for row in result_list if row[1] is not None or row[2] is not None]

            for row in result_list2:
                print(row)

            text = ""
            for row in result_list2:
                text += f"{row[5]} \n {row[1]} \n {row[4]} \n {row[2]} \n {row[3]}\n"

            print(text)
            text = str(text).replace("None", " ").replace("\n", " ").replace("  ", "")

            print(text)

            bot.send_message(message.chat.id, text)
            text = ""


        elif message.text == 'T–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è':
            cur.execute(
                "SELECT day, subject, group_id, classroom, lecture_type, lecture_time FROM lecture WHERE teacher = %s",
                (f"{teacher_name}",))

            result_list = cur.fetchall()

            result_list2 = []
            for row in result_list:
                if all(row[1:]):
                    result_list2.append(row)

            text = ""
            for row in result_list2:
                text += f"{row[0]} \n {row[5]} \n {row[1]} \n {row[4]} \n {row[2]} \n {row[3]}\n"
            print(text)

            bot.send_message(message.chat.id, text)

bot.polling(none_stop= True)
