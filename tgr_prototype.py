import telebot
from telebot import types

import datetime
import time
import psycopg2

#–±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å postgresql


# —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
conn = psycopg2.connect(dbname='BotDBtest', user='postgres', password='danilworld1', host='127.0.0.1', port='5432')

# —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∫—É—Ä—Å–æ—Ä–∞
cur = conn.cursor()

#–≤–≤–æ–¥–∏–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞

bot = telebot.TeleBot ("5818591053:AAFZc3LJiRLkzNHIEh4TnBshzHWwIdpSABU")

#—Å–ø–∏—Å–æ–∫ —Å –¥–Ω—è–º–∏ –Ω–µ–¥–µ–ª–∏
week = ["–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–≤—Ç–æ—Ä–Ω–∏–∫", "—Å—Ä–µ–¥–∞", "—á–µ—Ç–≤–µ—Ä–≥", "–ø—è—Ç–Ω–∏—Ü–∞", "—Å—É–±–±–æ—Ç–∞", "–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ", "–∑–∞–≥–ª—É—à–∫–∞"]


group_name = "–ò–°–ü–∫-302-52-00"   #–ø–æ—Ç–æ–º –±—É–¥–µ—Ç –±—Ä–∞—Ç—å—Å—è –∏–∑ –ë–î
teacher_name = "–ì–Ω–∏–µ–Ω–∫–æ –ê.–ê."   #–ø–æ—Ç–æ–º –±—É–¥–µ—Ç –±—Ä–∞—Ç—å—Å—è –∏–∑ –ë–î

day = datetime.datetime.today().weekday()   #–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–Ω—è –Ω–µ–¥–µ–ª–∏


day_of_week = week[day]          #—Å–µ–≥–æ–¥–Ω—è
day_tomorrow = week[day +1]       #–∑–∞–≤—Ç—Ä–∞


@bot.message_handler(commands = ["start"])

#—Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—á–∞–¥–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º
def start (message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç—Å–≤—É—é —Ç–µ–±—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å,'
                                      '\n –¥–∞–Ω–Ω—ã–π –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≥—Ä—É–ø–ø –∫–æ–ª–µ–¥–∂–∞ –í—è—Ç–ì–£,–∞ —Ç–∞–∫–∂–µ –µ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π,'
                                      '\n –î–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–π –≥—Ä—É–ø–ø—ã '
                                      '\n –ù–∞–ø—Ä–∏–º–µ—Ä: –ò–°–ü–∫ 302-52-00 '
                                      '\n –ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–µ–Ω –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å, —Ç–æ –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ –§–ò–û '
                                      '\n –ù–∞–ø—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω–æ–≤ –ò.–ò.')
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–º—è –µ–≥–æ –≥—Ä—É–ø–ø—ã
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∏–º—è –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã:')
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.register_next_step_handler(message, get_user_group)





@bot.message_handler(content_types=['text'])
def bot_message(message):

    if message.chat.type == 'private':
        if message.text == 'üìö –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
            markup = types.ReplyKeyboardMarkup (resize_keyboard= True)
            item1 = types.KeyboardButton('üßë‚Äçüéì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã')
            item2 = types.KeyboardButton('üë®‚Äçüè´ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è')
            item3 = types.KeyboardButton('üîî –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤')
            back = types.KeyboardButton('üîö–ù–∞–∑–∞–¥')
            markup.add(item1, item2, item3, back)

            bot.send_message (message.chat.id,'üìö –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ',reply_markup=markup)
    #–≤—ã–≤–æ–¥ —Ä–µ—Å—É—Ä—Å–æ–≤ –≤—è—Ç–≥—É
        elif message.text == '‚Ñπ –†–µ—Å—É—Ä—Å—ã –í—è—Ç–ì–£':
            spravka = open('resurs.txt', 'r', encoding='utf-8')
            bot.send_message(message.chat.id, spravka.read())
    # —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
        elif message.text == '‚úâ –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥—Ä—É–ø–ø–µ')
            item2 = types.KeyboardButton('üîö–ù–∞–∑–∞–¥')
            item4 = types.KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º')
            markup.add(item1, item4, item2)

            bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–µ—Ç–µ –∫–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ', reply_markup=markup)
    #–≤—ã–±–æ—Ä –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
        elif message.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥—Ä—É–ø–ø–µ':
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã:')
            bot.register_next_step_handler(message, get_admin_group)
        elif message.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º':
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç:')
            bot.register_next_step_handler(message, get_admin_text)


    #–≤—ã–≤–æ–¥ —Å–ø—Ä–∞–≤–∫–∏ –ø–æ –±–æ—Ç—É
        elif message.text == 'üìÉ –°–ø—Ä–∞–≤–∫–∞':
            spravka = open('spravka.txt', 'r', encoding='utf-8')
            bot.send_message(message.chat.id, spravka.read())
    #–º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
        elif message.text == '‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏':
            markup = types.ReplyKeyboardMarkup (resize_keyboard= True)
            item1 = types.KeyboardButton('‚úè –ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø–ø—É')
            item2 = types.KeyboardButton('–í–∫–ª.—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')
            item3 = types.KeyboardButton('üì¥ –í—ã–∫–ª.—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')
            back = types.KeyboardButton('üîö–ù–∞–∑–∞–¥')
            markup.add(item1, item2, item3, back)

            bot.send_message (message.chat.id,'‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏',reply_markup=markup)
    #–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–≥–æ —è–≤–ª—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏–ª–∏ –Ω–µ—Ç –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        elif message.text == 'üîö–ù–∞–∑–∞–¥':

            # –ü–æ–ª—É—á–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            telegram_id = str(message.from_user.id)

            cur.execute(
                "SELECT user_admin FROM users WHERE telegram_id = %s;",
                (telegram_id,)
            )
            user_admin = cur.fetchone()[0]
            print(user_admin)

            if user_admin:
                markup = types.ReplyKeyboardMarkup(
                    resize_keyboard=True)  # —Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–æ–∫ –ø–æ–¥–≥–æ–Ω—è—é—Ç—Å—è –∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
                # —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
                item1 = types.KeyboardButton('üìö –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
                item2 = types.KeyboardButton('‚Ñπ –†–µ—Å—É—Ä—Å—ã –í—è—Ç–ì–£')
                item3 = types.KeyboardButton('‚úâ –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π')
                item4 = types.KeyboardButton('üìÉ –°–ø—Ä–∞–≤–∫–∞')
                item5 = types.KeyboardButton('‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏')
                markup.add(item1, item2, item3, item4, item5)
                bot.send_message(message.chat.id, 'üîö–ù–∞–∑–∞–¥', reply_markup=markup)

            else:
                markup = types.ReplyKeyboardMarkup(
                    resize_keyboard=True)  # —Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–æ–∫ –ø–æ–¥–≥–æ–Ω—è—é—Ç—Å—è –∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
                # —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
                item1 = types.KeyboardButton('üìö –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
                item2 = types.KeyboardButton('‚Ñπ –†–µ—Å—É—Ä—Å—ã –í—è—Ç–ì–£')
                item4 = types.KeyboardButton('üìÉ –°–ø—Ä–∞–≤–∫–∞')
                item5 = types.KeyboardButton('‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏')
                markup.add(item1, item2, item4, item5)
                bot.send_message(message.chat.id, 'üîö–ù–∞–∑–∞–¥', reply_markup=markup)

        
        elif message.text == 'üîî –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤':
            bot.send_message(message.chat.id, '–í—ã–≤–æ–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∑–≤–æ–Ω–∫–æ–≤')

    #—Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º
        elif message.text == 'üßë‚Äçüéì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã':
            markup = types.ReplyKeyboardMarkup (resize_keyboard= True)
            item1 = types.KeyboardButton('–°–µ–≥–æ–¥–Ω—è')
            item2 = types.KeyboardButton('–ó–∞–≤—Ç—Ä–∞')
            item3 = types.KeyboardButton('–¢–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è')
            back = types.KeyboardButton('üîö–ù–∞–∑–∞–¥')
            markup.add(item1, item2, item3, back)

            bot.send_message (message.chat.id,'üßë‚Äçüéì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã',reply_markup=markup)



        elif message.text == 'üë®‚Äçüè´ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è':
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø—Ä–µ–ø–æ–¥–æ–≤–∞—Ç–µ–ª—è:\n–í —Ñ–æ—Ä–º–∞—Ç–µ –ò–≤–∞–Ω–æ–≤ –ò.–ò.")
            bot.register_next_step_handler(message, get_teacher_name)

#–≤—ã–≤–æ–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –≥—Ä—É–ø–ø—ã

        elif message.text == '–°–µ–≥–æ–¥–Ω—è':
            #–ø–æ–ª—É—á–∞–µ–º –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            telegram_id = str(message.from_user.id)
            #–ø–æ–ª—É—á–∞–µ–º –≥—Ä—É–ø–ø—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–Ω–µ—Å—ë–Ω–Ω—É—é –≤ –±–¥
            cur.execute("SELECT user_group FROM users WHERE telegram_id = %s", (telegram_id,))
            group_name = cur.fetchone()[0]


            cur.execute(
                "SELECT day, subject, teacher, classroom, lecture_type, lecture_time FROM lecture WHERE group_id ILIKE %s AND day = %s",
                (f"{group_name}%", day_of_week))

            # –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –µ–≥–æ –≤ —Å–ø–∏—Å–æ–∫
            result_list = cur.fetchall()

            # –≤—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞
            for row in result_list:
                print(row)

            result_list2 = []
            result_list2 = [row for row in result_list if row[1] is not None or row[2] is not None]

            for row in result_list2:
                print(row)

            text = ""
            for row in result_list2:
                text += f"{row[5]} \n {row[1]} \n {row[4]} \n {row[2]} \n {row[3]}\n"

            print(text)
            text = str(text).replace("None", " ").replace("\n", " ").replace("  ", "")

            print(text)
            if text == "":
                bot.send_message(message.chat.id, '–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:\n–ì—Ä—É–ø–ø–∞ –±—ã–ª–∞ –∑–∞–Ω–µ—Å–µ–Ω–∞ –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ!')
            else:
                bot.send_message(message.chat.id, text)
                text = ""



        elif message.text == '–ó–∞–≤—Ç—Ä–∞':

            telegram_id = str(message.from_user.id)
            cur.execute("SELECT user_group FROM users WHERE telegram_id = %s", (telegram_id,))
            group_name = cur.fetchone()[0]

            cur.execute(
                "SELECT day, subject, teacher, classroom, lecture_type, lecture_time FROM lecture WHERE group_id ILIKE %s AND day = %s",
                (f"{group_name}%", day_tomorrow))

            # –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –µ–≥–æ –≤ —Å–ø–∏—Å–æ–∫
            result_list = cur.fetchall()

            # –≤—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞
            for row in result_list:
                print(row)

            result_list2 = []
            result_list2 = [row for row in result_list if row[1] is not None or row[2] is not None]

            for row in result_list2:
                print(row)



            text = ""
            for row in result_list2:
                text += f"{row[5]} \n {row[1]} \n {row[4]} \n {row[2]} \n {row[3]}\n"

            print(text)
            text = str(text).replace("None", " ").replace("\n", " ").replace("  ", "")

            print(text)

            if text == "":
                bot.send_message(message.chat.id, '–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:\n–ì—Ä—É–ø–ø–∞ –±—ã–ª–∞ –∑–∞–Ω–µ—Å–µ–Ω–∞ –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ!')
            else:
                bot.send_message(message.chat.id, text)
                text = ""

        elif message.text == '–¢–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è':

            telegram_id = str(message.from_user.id)
            cur.execute("SELECT user_group FROM users WHERE telegram_id = %s", (telegram_id,))
            group_name = cur.fetchone()[0]

            cur.execute(
                "SELECT day, subject, teacher, classroom, lecture_type, lecture_time FROM lecture WHERE group_id = %s",
                (f"{group_name}",))

            result_list = cur.fetchall()
            print(result_list)
            result_list2 = []
            result_list2 = [row for row in result_list if row[1] is not None or row[2] is not None]
            print(result_list2)
            text = ""
            for row in result_list2:
                text += f"{row[0]} \n {row[5]} \n {row[1]} \n {row[4]} \n {row[2]} \n {row[3]}\n"

                new_text = ""
                for line in text.split("\n"):
                    if line.strip():
                        new_text += line + "\n"
            print(new_text)
            text = new_text
            text = str(text).replace("None \n", " ").replace("None", "")
            bot.send_message(message.chat.id, text)


            if text == "":
                bot.send_message(message.chat.id, '–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:\n–ì—Ä—É–ø–ø–∞ –±—ã–ª–∞ –∑–∞–Ω–µ—Å–µ–Ω–∞ –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ!')
            else:
                bot.send_message(message.chat.id, text)
                text = ""

        elif message.text == '–í–∫–ª.—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('6:00')
            item2 = types.KeyboardButton('12:00')
            item3 = types.KeyboardButton('–ü–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞')
            item4 = types.KeyboardButton('–¢–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è')
            back = types.KeyboardButton('üîö–ù–∞–∑–∞–¥')
            markup.add(item1, item2, item3, item4, back)


        
        elif message.text == 'üì¥ –í—ã–∫–ª.—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è':
            bot.send_message(message.chat.id, '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª.')

# –≤—ã–≤–æ–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π

        elif message.text == 'C–µ–≥–æ–¥–Ω—è':
            # –ø–æ–ª—É—á–∞–µ–º –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            telegram_id = str(message.from_user.id)
            # –ø–æ–ª—É—á–∞–µ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã–±—Ä–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            cur.execute("SELECT user_teacher FROM users WHERE telegram_id = %s", (telegram_id,))

            teacher_name = cur.fetchone()[0]

            cur.execute(
                "SELECT day, subject, group_id, classroom, lecture_type, lecture_time FROM lecture WHERE teacher ILIKE %s AND day = %s",
                (f"{teacher_name}%", day_of_week))

            # –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –µ–≥–æ –≤ —Å–ø–∏—Å–æ–∫
            result_list = cur.fetchall()

            # –≤—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞
            for row in result_list:
                print(row)

            result_list2 = []
            result_list2 = [row for row in result_list if row[1] is not None or row[2] is not None]

            for row in result_list2:
                print(row)

            text = ""
            for row in result_list2:
                text += f"{row[5]} \n {row[1]} \n {row[4]} \n {row[2]} \n {row[3]}\n"

            print(text)
            text = str(text).replace("None", " ").replace("\n", " ").replace("  ", "")

            print(text)

            if text == "":
                bot.send_message(message.chat.id, '–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:\n–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –±—ã–ª –∑–∞–Ω–µ—Å—ë–Ω –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ/–≤ –¥–∞–Ω–Ω—ã–π –¥–µ–Ω—å —É –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø–∞—Ä')
            else:
                bot.send_message(message.chat.id, text)
                text = ""


        elif message.text == '–ó–∞–≤—Ç—Äa':

            # –ø–æ–ª—É—á–∞–µ–º –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            telegram_id = str(message.from_user.id)
            # –ø–æ–ª—É—á–∞–µ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã–±—Ä–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            cur.execute("SELECT user_teacher FROM users WHERE telegram_id = %s", (telegram_id,))

            teacher_name = cur.fetchone()[0]

            cur.execute(
                "SELECT day, subject, group_id, classroom, lecture_type, lecture_time FROM lecture WHERE teacher ILIKE %s AND day = %s",
                (f"{teacher_name}%", day_tomorrow))

            # –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –µ–≥–æ –≤ —Å–ø–∏—Å–æ–∫
            result_list = cur.fetchall()

            # –≤—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞
            for row in result_list:
                print(row)

            result_list2 = []
            result_list2 = [row for row in result_list if row[1] is not None or row[2] is not None]

            for row in result_list2:
                print(row)

            text = ""
            for row in result_list2:
                text += f"{row[5]} \n {row[1]} \n {row[4]} \n {row[2]} \n {row[3]}\n"

            print(text)
            text = str(text).replace("None", " ").replace("\n", " ").replace("  ", "")

            print(text)

            if text == "":
                bot.send_message(message.chat.id, '–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:\n–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –±—ã–ª –∑–∞–Ω–µ—Å—ë–Ω –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ/–≤ –¥–∞–Ω–Ω—ã–π –¥–µ–Ω—å —É –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø–∞—Ä')
            else:
                bot.send_message(message.chat.id, text)
                text = ""


        elif message.text == 'T–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è':

            # –ø–æ–ª—É—á–∞–µ–º –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            telegram_id = str(message.from_user.id)
            # –ø–æ–ª—É—á–∞–µ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã–±—Ä–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            cur.execute("SELECT user_teacher FROM users WHERE telegram_id = %s", (telegram_id,))

            teacher_name = cur.fetchone()[0]

            cur.execute(
                "SELECT day, subject, group_id, classroom, lecture_type, lecture_time FROM lecture WHERE teacher = %s",
                (f"{teacher_name}",))

            result_list = cur.fetchall()

            result_list2 = []
            for row in result_list:
                if all(row[1:]):
                    result_list2.append(row)

            text = ""
            for row in result_list2:
                text += f"{row[0]} \n {row[5]} \n {row[1]} \n {row[4]} \n {row[2]} \n {row[3]}\n"
            print(text)

            if text == "":
                bot.send_message(message.chat.id, '–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:\n–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –±—ã–ª –∑–∞–Ω–µ—Å—ë–Ω –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ/–≤ –¥–∞–Ω–Ω—ã–π –¥–µ–Ω—å —É –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø–∞—Ä')
            else:
                bot.send_message(message.chat.id, text)
                text = ""



        elif message.text == '‚úè –ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø–ø—É':
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–º—è –µ–≥–æ –≥—Ä—É–ø–ø—ã
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∏–º—è –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã:')
            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            bot.register_next_step_handler(message, change_user_group)





#—Ñ—É–Ω–∫—Ü–∏–∏ (–¥—É–º–∞—é –ø–æ –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏—é –ø–æ–Ω—è—Ç–Ω–æ —á—Ç–æ –æ–Ω–∏ –¥–µ–ª–∞—é—Ç)

def get_teacher_name(message):
    # –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é teacher_name
    global teacher_name
    teacher_name = message.text
    # –ü–æ–ª—É—á–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    telegram_id = message.from_user.id
    cur.execute(
        "INSERT INTO users (telegram_id, user_teacher) VALUES (%s, %s) ON CONFLICT (telegram_id) DO UPDATE SET user_teacher = EXCLUDED.user_teacher;",
        (telegram_id, teacher_name)
    )
    conn.commit()

    markup = types.ReplyKeyboardMarkup (resize_keyboard= True)
    item1 = types.KeyboardButton('C–µ–≥–æ–¥–Ω—è')
    item2 = types.KeyboardButton('–ó–∞–≤—Ç—Äa')
    item3 = types.KeyboardButton('T–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è')
    back = types.KeyboardButton('üîö–ù–∞–∑–∞–¥')
    markup.add(item1, item2, item3, back)
    bot.send_message (message.chat.id,'üë®‚Äçüè´ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è',reply_markup=markup)

def get_user_group(message):
    # –ü–æ–ª—É—á–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    telegram_id = str(message.from_user.id)

    cur.execute(
        "SELECT user_admin FROM users WHERE telegram_id = %s;",
        (telegram_id,)
    )
    user_admin = cur.fetchone()[0]
    print(user_admin)
    global user_group
    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –≥—Ä—É–ø–ø—ã
    user_group = message.text
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—É users
    cur.execute(
        "INSERT INTO users (telegram_id, user_group) VALUES (%s, %s) ON CONFLICT (telegram_id) DO UPDATE SET user_group = EXCLUDED.user_group;",
        (telegram_id, user_group)
    )
    conn.commit()

    if user_admin:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)  # —Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–æ–∫ –ø–æ–¥–≥–æ–Ω—è—é—Ç—Å—è –∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
        # —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
        item1 = types.KeyboardButton('üìö –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
        item2 = types.KeyboardButton('‚Ñπ –†–µ—Å—É—Ä—Å—ã –í—è—Ç–ì–£')
        item3 = types.KeyboardButton('‚úâ –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π')
        item4 = types.KeyboardButton('üìÉ –°–ø—Ä–∞–≤–∫–∞')
        item5 = types.KeyboardButton('‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏')
        markup.add(item1, item2, item3, item4, item5)
        bot.send_message(message.chat.id, '–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!', reply_markup=markup)

    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)  # —Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–æ–∫ –ø–æ–¥–≥–æ–Ω—è—é—Ç—Å—è –∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
        # —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
        item1 = types.KeyboardButton('üìö –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
        item2 = types.KeyboardButton('‚Ñπ –†–µ—Å—É—Ä—Å—ã –í—è—Ç–ì–£')
        item4 = types.KeyboardButton('üìÉ –°–ø—Ä–∞–≤–∫–∞')
        item5 = types.KeyboardButton('‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏')
        markup.add(item1, item2, item4, item5)
        bot.send_message(message.chat.id, '–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è, —Å—Ç—É–¥–µ–Ω—Ç!', reply_markup=markup)

def change_user_group(message):
    # –ü–æ–ª—É—á–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    telegram_id = message.from_user.id
    global user_group
    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –≥—Ä—É–ø–ø—ã
    user_group = message.text
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—É users
    cur.execute(
        "INSERT INTO users (telegram_id, user_group) VALUES (%s, %s) ON CONFLICT (telegram_id) DO UPDATE SET user_group = EXCLUDED.user_group;",
        (telegram_id, user_group)
    )
    conn.commit()
    #–∑–∞–Ω–æ–≤–æ –¥–µ–ª–∞–µ–º –∫–Ω–æ–ø–æ—á–∫–∏
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('‚úè –ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø–ø—É')
    item2 = types.KeyboardButton('üì≥ –í–∫–ª.—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')
    item3 = types.KeyboardButton('üì¥ –í—ã–∫–ª.—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')
    back = types.KeyboardButton('üîö–ù–∞–∑–∞–¥')
    markup.add(item1, item2, item3, back)
    bot.send_message(message.chat.id, '–ì—Ä—É–ø–ø–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞')



def get_admin_group(message):
    global admin_group
    admin_group = message.text
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:')
    bot.register_next_step_handler(message, send_message_to_group)


def send_message_to_group(message):
    admin_text = message.text
    admin_id = message.chat.id
    cur.execute("SELECT telegram_id FROM users WHERE user_group = %s", (admin_group,))
    rows = cur.fetchall()


    for row in rows:
        bot.send_message(row[0], '–ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï –û–¢ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò:\n{}'.format(admin_text))
    cur.execute(
        "INSERT INTO history_message (sender_message, text_message, group_message) VALUES (%s, %s, %s)",
        (admin_id, admin_text, admin_group)
    )
    conn.commit()


def get_admin_text(message):
    admin_text = message.text
    admin_id = message.chat.id
    cur.execute("SELECT telegram_id FROM users")
    rows = cur.fetchall()
    for row in rows:
        bot.send_message(row[0], '–ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï –û–¢ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–ò:\n{}'.format(admin_text))
    cur.execute(
        "INSERT INTO history_message (sender_message, text_message) VALUES (%s, %s)",
        (admin_id, admin_text)
    )
    conn.commit()






bot.polling(none_stop= True)
